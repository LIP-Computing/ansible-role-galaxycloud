---
# NGINX installation and configuration recipe

#---
# CentOS 7
# Modifications to the upstream (CentOS7) nginx package to add the upload (and possibly other) module(s).
# The package is built for CentOS7.

- name: Install NGINX dependencies
  yum: name={{item}}
       state=present
  with_items:
    - openssl-devel
    - pcre-devel
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat"

- name: Move NGINX rpm in /tmp
  copy: src=nginx-1.8.1-1.el7.centos.ngx.x86_64.rpm
        dest=/tmp/nginx-1.8.1-1.el7.centos.ngx.x86_64.rpm
  when: ansible_os_family == "RedHat"
  
- name: Install NGINX rpm from /tmp
  yum: name=/tmp/nginx-1.8.1-1.el7.centos.ngx.x86_64.rpm
       state=present
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat"

#---
# Ubuntu 14.04
# On Ubuntu NGINX service is started by default after installation. It needs to be restarted after the configuration.

- name: Add NGINX repository on Ubuntu
  apt_repository: repo='ppa:galaxyproject/nginx'
  become_user: root
  become_method: sudo
  when: ansible_os_family == "Debian"

- name: Install NGINX on Ubuntu
  apt: name={{item}}
       state=present
  with_items:
    - nginx-extras=1.4.6-1ubuntu3.4ppa1
    - nginx-common=1.4.6-1ubuntu3.4ppa1
  become_user: root
  become_method: sudo
  when: ansible_os_family == "Debian"

#########################################################
# NGINX configuration

# /etc/nginx/nginx.conf configuration

- name: Include NGINX specific variables.
  include_vars: nginx_vars.yml

- name: Copy the NGINX configuration file
  template: src=nginx.conf.j2 dest=/etc/nginx/nginx.conf
  become_user: root
  become_method: sudo

# Add galaxy proxy subdirectory configuration to galaxy.ini

- name: Edit galaxy.ini
  ini_file: dest={{galaxy_config_file}} section={{ item.section }} option={{ item.option }} value="{{ item.value }}"
  with_items:
    - { section: 'app:main', option: 'filter-with', value: "proxy-prefix" }
    - { section: 'app:main', option: 'cookie_path', value: "/galaxy" }

- name: Create NGINX upload_store dir
  file: state=directory path={{nginx_upload_store_path}}
