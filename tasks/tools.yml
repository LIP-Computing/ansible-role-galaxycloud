---
# Galaxy tools installation recipe
# This task is temporary. We will move it to a new tosca type.

- name: Copy Galaxy restart script
  template: src=galaxy_service.j2 dest=/usr/bin/galaxy-restart mode=a+x
  become_user: root
  become_method: sudo

#---
# CentOS 7

- name: Install tools depedencencies
  yum: name={{item}} state=present
  with_items:
    - java-1.7.0-openjdk # fastqc dependency
    - libpng12 # samtools dependency
    - ncurses # samtools dependency
    - ncurses-devel # samtools dependency
    - BEDTools
  become_user: root
  become_method: sudo
  when: ansible_os_family == "RedHat"


#---
# Ubuntu 14.04

- name: Install tools dependencies
  apt: name={{item}} state=present
  with_items:
    - openjdk-7-jdk # fastqc dependency
    - fastqc
    - libpng-dev # samtools dependency
    - libncurses5-dev # samtools dependency
    - bedtools
  become_user: root
  become_method: sudo
  when: ansible_os_family == "Debian"


#########################################################
# Install tools

- name: Create/invoke script virtualenv
  pip: name={{ item }} virtualenv=/tmp/venv virtualenv_command="{{ pip_virtualenv_command | default( 'virtualenv' ) }}"
  with_items:
    - ephemeris==0.4.0  # Pinned version should make sure ephemeris version matches what the role has been tested with

- name: Include ToolShed Install specific variables
  include_vars: tools_vars.yml

- name: Get tool-list
  get_url: url=https://raw.githubusercontent.com/mtangaro/galaxycloud-flavors-recipes/master/galaxy-flavors/{{galaxy_flavor}}-tool-list.yml dest=/tmp/

- include_vars: "/tmp/{{galaxy_flavor}}-tool-list.yml"

- name: Install Tool Shed tools
  command: '/tmp/venv/bin/shed-install -y "{{ item | to_nice_yaml }}" -a "{{galaxy_tools_api_key}}" -g "{{galaxy_tools_galaxy_instance_url}}"'
  register: install_result
  changed_when: "'installed successfully' in install_result.stderr"
  failed_when: ('Error installing' in install_result.stderr) or ('Missing required' in install_result.stderr) or (install_result.rc != 0)
  ignore_errors: "{{galaxy_tools_ignore_errors}}"
  with_items:
    - "{{ tools }}"

#---
# Update ucsc
- name: Download ucsc genome idexes
  get_url: url="http://cloud.recas.ba.infn.it:8080/v1/AUTH_3b4918e0a982493e8c3ebcc43586a2a8/INDIGO-REVIEW/ucsc.tar.gz"
  args:
    dest: "/tmp/"
    force: "yes"

- name: Copy ucsc genome indexes
  command: "tar xvzf /tmp/ucsc.tar.gz --directory=/home/galaxy/galaxy/tool-data/shared/"

#---
# Install and configure reference data

- name: Download Reference Data
  get_url: url="http://cloud.recas.ba.infn.it:8080/v1/AUTH_3b4918e0a982493e8c3ebcc43586a2a8/sacCer3/sacCer3.tar.gz"
  args:
    dest: "{{refdata_dir}}"
    force: "yes"

- name: Extract reference data
  command: 'tar xvzf {{refdata_dir}}/sacCer3.tar.gz --directory={{refdata_dir}}'

- name: Get bowtie loc files from github
  get_url: url="https://raw.githubusercontent.com/mtangaro/galaxycloud-flavors-recipes/master/loc-files/bowtie_indices.loc"
  args:
    dest: "{{galaxy_install_path}}/tool-data/toolshed.g2.bx.psu.edu/repos/devteam/bowtie_wrappers/306077e393d4/"
    force: "yes"


- name: Get sam_to_bam loc files from github
  get_url: url="https://raw.githubusercontent.com/mtangaro/galaxycloud-flavors-recipes/master/loc-files/fasta_indexes.loc"
  args:
    dest: "{{galaxy_install_path}}/tool-data/toolshed.g2.bx.psu.edu/repos/devteam/sam_to_bam/881e16ad05c6/"
    force: "yes"

#---
# Build SamTools

# SamTools variables
- set_fact: samtools_path="/opt/samtools"
- set_fact: samtools_version="1.3.1"

- name: Create SamTools destination directory
  file: path={{samtools_path}}
        state=directory
        owner={{galaxy_user}}
        group={{galaxy_user}}
  become_user: root
  become_method: sudo

- name: Download SamTools latest version
  get_url: url=https://github.com/samtools/samtools/releases/download/1.3.1/samtools-{{samtools_version}}.tar.bz2
           dest={{samtools_path}}/samtools-{{samtools_version}}.tar.bz2

# FIXME unarchive ansible module is not able to uncrompress files. A new module "uncompress" will be developed.
# The command module is used.
- name: Extract tar.bz2 file
  command: 'tar xvjf {{samtools_path}}/samtools-{{samtools_version}}.tar.bz2'
  args:
    chdir: '{{samtools_path}}'

- name: Running make
  command: 'make'
  args:
    chdir: '{{samtools_path}}/samtools-{{samtools_version}}'

- name: Running make install
  command: 'make install'
  args:
    chdir: '{{samtools_path}}/samtools-{{samtools_version}}'
  become_user: root
  become_method: sudo

#---
- name: Install bedGraphToBigWig
  get_url: url=http://hgdownload.cse.ucsc.edu/admin/exe/linux.x86_64/bedGraphToBigWig
  args:
    dest: "/usr/local/bin/"
    force: "yes"
    mode: "a+x"
  become_user: root
  become_method: sudo

#---
# ucsc_tools dependency workaround

- name: remove old libstdc++.so.6 lib
  file: path={{galaxy_install_path}}/tool_dependency/ucsc_tools/312/iuc/package_ucsc_tools_312/2d6bafd63401/lib/libstdc++.so.6 state=absent

- name: link the new lib
  file: src=/usr/lib64/libstdc++.so.6 dest={{galaxy_install_path}}/tool_dependency/ucsc_tools/312/iuc/package_ucsc_tools_312/2d6bafd63401/lib/libstdc++.so.6 state=link
  when: ansible_os_family == "RedHat"

- name: link the new lib
  file: src=/usr/lib/x86_64-linux-gnu/libstdc++.so.6 dest={{galaxy_install_path}}/tool_dependency/ucsc_tools/312/iuc/package_ucsc_tools_312/2d6bafd63401/lib/libstdc++.so.6 state=link
  when: ansible_os_family == "Debian"

#---
- name: Restart Galaxy
  command: "/usr/bin/galaxy-restart"
  become_user: root
  become_method: sudo

