---
# Galaxy customization recipe

#---
# galaxy.ini configuration
- name: Galaxy configuration
  ini_file: dest={{galaxy_config_file}} section={{ item.section }} option={{ item.option }} value="{{ item.value }}"
  with_items:
    - { section: 'app:main', option: 'admin_users', value: "{{galaxy_admin_email}}" }
    - { section: 'app:main', option: 'tool_dependency_dir', value: "{{ tool_deps_path }}" }
    - { section: 'app:main', option: 'brand', value: "{{galaxy_instance_description}}" }
    - { section: 'app:main', option: 'job_working_directory', value: "{{galaxy_db_dir}}/job_working_directory" }
    - { section: 'app:main', option: 'file_path', value: "{{galaxy_db_dir}}/files" }
    - { section: 'app:main', option: 'new_file_path', value: "{{galaxy_db_dir}}/tmp" }
    - { section: 'app:main', option: 'template_cache_path', value: "{{galaxy_db_dir}}/compiled_templates" }
    - { section: 'app:main', option: 'citation_cache_data_dir', value: "{{galaxy_db_dir}}/citations/data" }
    - { section: 'app:main', option: 'citation_cache_lock_dir', value: "{{galaxy_db_dir}}/citations/lock" }
    - { section: 'app:main', option: 'whoosh_index_dir', value: "{{galaxy_db_dir}}/whoosh_indexes" }
    - { section: 'app:main', option: 'object_store_cache_path', value: "{{galaxy_db_dir}}/object_store_cache" }
    - { section: 'app:main', option: 'cluster_file_directory', value: "{{galaxy_db_dir}}/pbs" }
    - { section: 'app:main', option: 'ftp_upload_dir', value: "{{galaxy_db_dir}}/ftp" }
    - { section: 'app:main', option: 'enable_old_display_applications', value: "{{enable_old_display_applications}}" }
    - { section: 'app:main', option: 'use_interactive', value: "{{use_interactive}}" }
    - { section: 'app:main', option: 'require_login', value: "{{require_login}}" }
    - { section: 'app:main', option: 'show_welcome_with_login', value: "{{show_welcome_with_login}}" }
    - { section: 'app:main', option: 'allow_user_deletion', value: "{{allow_user_deletion}}" }
    - { section: 'app:main', option: 'new_user_dataset_access_role_default_private', value: "{{new_user_dataset_access_role_default_private}}" }
    - { section: 'app:main', option: 'expose_user_name', value: "{{expose_user_name}}" }
    - { section: 'app:main', option: 'cleanup_job', value: "{{cleanup_job}}" }

- name: Enable Conda
  ini_file: dest={{galaxy_config_file}} section={{ item.section }} option={{ item.option }} value="{{ item.value }}"
  with_items:
    - { section: 'app:main', option: 'conda_prefix', value: "{{ conda_prefix }}" }
    - { section: 'app:main', option: 'job_working_directory', value: "{{ job_work_dir }}" } # change job working dir only when conda is enabled by default, to workaround current conda limitations.
    - { section: 'app:main', option: 'conda_ensure_channels', value: "{{ conda_channels }}" }
    - { section: 'app:main', option: 'conda_auto_install', value: "True" }
    - { section: 'app:main', option: 'conda_auto_init', value: "True" }
  when: use_conda

#---
# Galaxy administrator: email. username, password and api_key
# IMPORTANT: you need the galaxy database postgresql active to setup the galaxy administrator

- name: Copy create_galaxy_user.py to /usr/local/bin/
  template: src=create_galaxy_user.py.j2 dest=/usr/local/bin/create_galaxy_user.py
  become_user: root
  become_method: sudo

- name: Setup Galaxy administrator
  command: "{{galaxy_venv_path}}/bin/python /usr/local/bin/create_galaxy_user.py --user {{galaxy_admin_email}} --password {{galaxy_admin_password}} --username {{galaxy_admin_username}} -c {{galaxy_config_file}} --key {{galaxy_admin_api_key}} chdir={{galaxy_install_path}}/"
  environment:
    PYTHONPATH: "{{galaxy_install_path}}/lib"
    VIRTUAL_ENV: "{{galaxy_venv_path}}"

#---
# id_secret configuration

- name: Generate random id_secret key
  command: "/usr/local/bin/pwd-generator -l 32"
  register: galaxy_id_secret

- name: Galaxy id_secret key configuration
  ini_file: dest={{galaxy_config_file}} section={{ item.section }} option={{ item.option }} value="{{ item.value }}"
  with_items:
    - { section: 'app:main', option: 'id_secret', value: "{{galaxy_id_secret.stdout}}" }

#---
# Update UCSC genome database
- include: updateucsc.yml
  when: update_ucsc
